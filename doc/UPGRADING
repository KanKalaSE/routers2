                    Upgrading from routers v2.x to latest
                    -------------------------------------

You should be able to just run the install.pl script, and answer the questions
as you did when installing originally.  Your old routers2.conf file will be
preserved, as will the old version of routers.cgi (as routers-old.cgi).

However, you are advised to check the CHANGES file for new options and new
features, and look at the sample routers2.conf file to see new directives
that can be placed in there to enable new features.

The display may change slightly - verify that the new defaults are the way
you want them, and if not, then override either in the routers2.conf file, 
or in the individual MRTG .cfg files.

                     Upgrading from routers v1.x to v2.x
                     -----------------------------------

routers.cgi v2.0 has a few noticable differences to routers v1.x.  Most of the
changes are enhancements, however there are a few incompatibilities between
the major versions.

0. Change of name
Yes, it is now called routers2.cgi, and the default .conf file is routers2.conf
This will also cancel any saved preferences you have from v1.x as the cookie
names will change.

1. Change of bookmark URLs
Any saved bookmarks (generated by the 'Bookmark' button) from v1.x will NOT
work in routers v2.x, due to a change in the way the indexing works.
However, the new way is much clearer and more flexible!
One point to note, however, is that MRTG target names MUST NOT start with an
underscore ('_').

2. Slight change in routers.conf
There are some new entries in the routers.conf, and also some changes.
The 'iconpath' directive is now called 'iconurl'.
Many defaults in routers.conf can now be overridden by MRTG file directives.
There are also many new routers2.conf file directives - see the ROUTERS_CONF 
file for more details.

3. Target default display parameters
v1.x assumed that everything was a router interface, and displayed it with
appropriate defaults, which could then be overridden.  In v2.0, a simple AI
test is used to classify a target as 'interface', 'cpu', 'memory', or 'generic'.
This mode is then used to apply different sets of default display parameters.
You can manually set the mode using the 'routers.cgi*Mode[target]: modename'
directivein the MRTG file.

4. Menu titles and headers
Instead of being called 'routers' and 'interfaces', the headings are now set
to be 'devices' and 'targets'.  However, spare graphic files exist in the 
altgif directory to enable you to reinstate the old headings if you prefer.
Note that the old altgif graphics sets do not contain icons for all of the new
headings (eg, archiving).

5. Many configuration options moved to MRTG files
You can see more details in the MRTG_INFO file, but basically there are a lot
of new routers.cgi*...  directives for the MRTG configuration files.  You
have a lot of additional control over the display of the graphs.  Also, more of
the MRTG directives are supported.

6. User defined graphs
You can now define your own custom graphs combining multiple targets.  See the
HOWTO file for more details.

7. Archiving -- Graph and/or RRD
This is not enabled by default, but if enabled allows users to store and
delete graphs at any point.  If enabled, you are expected to take care of 
clearing down the graphs directory of old saved graphs!  Also, there is the
possibility that users could fill your graphs filesystem by constant graph
saving, or that they could delete graphs that have been saved by other users.
If you choose to use RRD archiving, you need to use a scheduler to daily run
the rrd-archive script to make the archives.

8. New defaults
If you are not preserving your existing routers.conf file, then you will notice
that the new default display style is designed for 800x600 screens.  You can,
of course, override this in your routers.conf.
